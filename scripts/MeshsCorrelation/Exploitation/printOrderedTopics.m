% Written by: Erick Cobos T. (erick.cobos@epfl.ch)
% Date: 28-05-2014

% Reorders matrix rows by p(m) and prints the n-highest topics (descending order on p(m,z))
% for the IDs in the given positions (index start at 1).
% Useful to check the quality of our results

function printOrderedTopics
	% Set parameters
	positions = [1:10];
	numberOfTopics = 10;

	% Read  matrix
	matrix = dlmread('results/descriptorMatrix_MD.tsv','\t');

	% TREE NUMBERS: Uncomment this lines for tree numbers
	% Matlab does not manage strings as IDs, so assign line number as ID
	%matrix(2:end,1) = 2:size(matrix,1);

	% Reorder matrix. This orders the rows of the matrix on descending order by p(m) (sum of the row)
	matrix = reorderRows(matrix);

	for pos = positions
		% Get the ordered topics for the given ID
		ID = matrix(pos+1,1);
		%ID = 18313;
		[topics, probs] = getOrderedTopics(matrix, ID); % p(z,m)
		normalizedProbs = probs/sum(probs); %p(z|m)


		%Print to screen
		printf("%d\t", pos); % Pos
		printf("%06d\t", ID); % ID
		printf("%d\t",sum(probs)) % DocCount
		for i = 1:numberOfTopics
			printf("%d(%0.3f), ",topics(i) , normalizedProbs(i)); % Topic#(prob)
		end
		printf("\n");
	end


	% Print histogram with frequency of appearance
	s = sum(matrix(2:end,2:end)');
	h = histc(s,1:99);
	bar(h(1:99));
	title('Frequency of appearance of descriptors in corpus');
	xlabel('Number of documents |D(m)|');
	ylabel('Number of nodes');
	print('frequency.eps','-depsc');
end

function ans = reorderRows(matrix)
	ans = matrix;

	% Set rows
	rowWeights = [Inf; sum(ans(2:end, 2:end),2) ];
	[x, newOrder] = sort(rowWeights, 'descend');
	ans = ans(newOrder,:);
	numberOfRows = size(ans)(1);

end
